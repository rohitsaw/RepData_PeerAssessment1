summarise(mean_weight = mean(weight))
nc %>%
group_by(habit) %>%
summarise(mean_weight = median(weight))
nc %>%
group_by(habit) %>%
summarise(mean_weight = IQR(weight))
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ht", null = 0,
alternative = "twosided", method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ci", null = 0,
alternative = "twosided", method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ci", conf_level = 0.95,  method = "theoretical")
inference(y = weeks, data = nc, statistic = "mean", type = "ci", conf_level = 0.99,  method = "theoretical")
nc %>% select(mage, mature) %>% head()
nc %>% select(mage, mature) %>% group_by(mature) %>% summarise(max = max(mage), min=min(mage))
50*0.7
?pnorm
pnorm(0.95, 0.90, 0.0212)
pnorm(0.95, 0.90, 0.0212, lower.tail = FALSE)
0.9*50
0.1*50
qnorm(0.95)
qnorm(0.025)
50*50
2500*1.96*1.96
9604/9
2*pnorm(0.12, lower.tail = FALSE)
pnorm(1.74)
2*pnorm(0.12, sd = 0.0691, lower.tail = FALSE)
?inference
?pchisq
pchisq(22.63, 4, lower.tail = FALSE)
pchisq(31.68, 2, lower.tail = FALSE)
1000*0.2
1000*0.8
12*0.8
0.47*(1-0.47)/1037
0.475409*(1-0.475409)/1037 + 0.579766*(1-0.579766)/1028
(0.475409*(1-0.475409)/1037 + 0.579766*(1-0.579766)/1028)^0.5
library(devtools)
library(statsr)
library(dplyr)
library(ggplot2)
data(atheism)
head(atheism)
us12 <- atheism %>%
filter(nationality == "United States" , atheism$year == "2012")
head(us12)
us12 %>% group_by(response) %>% summarise(mean = mean(response))
us12 %>% mutate("Yes" if atheist = "atheist" else "No")
us12 %>% mutate(atheist = ifelse(atheist=="atheist", "Yes", "No"))
?mutate
us12 %>% group_by(response) %>% summarise()
us12 %>% mutate(atheist = ifelse(response=="atheist", "Yes", "No"))
us12 %>% mutate(atheist = ifelse(response=="atheist", "Yes", "No")) %>% group_by(response) %>% summarise(atheist)
us12 %>% mutate(atheist = ifelse(response=="atheist", "Yes", "No")) %>% group_by(response) %>% summarise(count(atheist))
inference(y = response, data = us12, statistic = "proportion", type = "ci", method = "theoretical", success = "atheist")
us12 %>% mutate(atheist = ifelse(response=="atheist", "Yes", "No")) %>% group_by(response) %>% summarise()
us12 %>% mutate(atheist = ifelse(response=="atheist", "Yes", "No")) %>% group_by(response) %>% summarise(mean = mean(atheist))
us12 %>% mutate(atheist = ifelse(response=="atheist", "Yes", "No")) %>% group_by(response) %>% summarise(mean = count(atheist))
us12 %>% mutate(atheist = ifelse(response=="atheist", "Yes", "No")) %>% group_by(response) %>% summary()
us12 %>% mutate(atheist = ifelse(response=="atheist", "Yes", "No")) %>% group_by(response)
us12 %>% mutate(atheist = ifelse(response=="atheist", "Yes", "No")) %>% group_by(response) %>% str()
us12 %>% mutate(atheist = ifelse(response=="atheist", "Yes", "No")) %>% group_by(response) %>% summarise(atheist)
head(atheism)
getwd()
library(statsr)
library(dplyr)
library(ggplot2)
library(devtools)
?inference
us12 <- atheism %>%
filter(nationality == "United States" , atheism$year == "2012")
head(us12)
us12 <- us12 %>% mutate(atheist? = ifelse(response=="atheist", "yes", "no"))
us12 <- us12 %>% mutate(atheist = ifelse(response=="atheist", "yes", "no"))
head(us12)
us12 %>% group_by(response) %>% summary()
us12 %>% group_by(response) %>% summarise()
us12 %>% group_by(response) %>% summarise(count = atheism)
us12 %>% group_by(response) %>% summarise(atheist)
?summarise
us12 %>% group_by(response) %>% summarise(n())
us12 %>% group_by(response) %>% summarise(n()/1002)
data(atheism)
head(atheism)
?par
?transform
?colors
par("col")
?par
packageVersion("swirl")
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm, color = "blue")
boxplot(ppm, col = "blue")
abline(h = 12)
hist(ppm, col="green")
rug(ppm)
low
high
hist(ppm, col="green", breaks=100)
hist(ppm, col="green")
rug(ppm)
hist(ppm, col="green")
abline(v=12, lwd=2)
abline(v=median(ppm),col="magenta" lwd=4)
abline(v=median(ppm),col="magenta", lwd=4)
names(pollution)
reg <- pollution$region
reg <- table(pollution$region)
reg
barplot(reg, col="wheat", main="Number of Countries in Each Region")
barplot(reg, col = "wheat", main = "Number of Counties in Each Region")
boxplot(pm25~region, data=pollution, col="red")
par(mfrow=c(2,1), mar=c(4,4,2,1))
east <- subset(pollution, region == "east")
head(east)
hist(east$pm25,col = "green" )
hist(subset(pollution, region=="west")$pm25, col="green")
with(pollution, plot(latitude, pm25))
abline(h=12, lwd=2, lty=2)
plot(pollution$latitude, pollution$ppm, col=pollution$region)
plot(pollution$latitude,ppm, col=pollution$region)
abline(h=12, lwd=2, lty=2)
par(mfrow=c(1,2), mar=c(5,4,2,1))
west <- subset(pollution, region=="west")
plot(west$latitude, west$pm25, main="West")
plot(East$latitude, East$pm25, main="East")
plot(east$latitude, east$pm25, main="East")
swirl()
xll()
x11()
?Devices
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.copy(png, file="geyserplot.png")
dev.off()
swirl()
?png
png("plot.png")
dev.cur()
dev.off()
?plot
x <- rnorm(100)
y <- rnorm(100)
plot(x,y,type="1")
plot(x,y)
png("plot2.png", width=480, height=480)
plot(x,y,type="1")
dev.off()
?read.table
swirl()
library('swirl')
swirl()
head(cars)
with(cars, plot(speed, dist))
text(mean(cars$speed), max(cars$dist, "SWIRL rules!")
)
text(mean(cars$speed), max(cars$dist), "SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp~Income|region, data=state, layout=c(4,1))
xyplot(Life.Exp~Income|region, data=state, layout=c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hwy, mpg)
qplot(displ, hwy, data=mpg)
head(airquality)
range(airquality$Ozone, na.rm = TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~month, airquality)
boxplot(Ozone~Month, airquality)
boxplot(Ozone~Month, airquality,xlab="Month", ylab="Ozone(ppb)", col.axis="blue", col.lab="red")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone(ppb)",col.axis="blue",col.lab="red")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone (ppb)",col.axis="blue",col.lab="red")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone (ppb)",col.axis="blue",col.lab="red", main="Ozone and Wind in New York City")
title(main="Ozone and Wind in New York City")
with(airquality, plot(Wind, Ozone))
title(main="Ozone and Wind in New York City")
par(length)
length(par())
names(par)
par(names)
names(par())
par()$pin
par()$fg
par("pch")
par("lty")
plot(airquality$Wind,airquality$Ozone, type="n" )
title("Wind and Ozone in NYC")
may <- subset(airquality$Month=="5")
play()
?subset
resume()
exit()
swirl()
may <- subset(airquality, airquality$Month=="5")
may <- subset(airquality, Month==5)
plot(may$Wind, may$Ozone, col="blue")
plot(may$Wind, may$Ozone, col="blue", pch=17)
points(may$Wind, may$Ozone, col="blue", pch=17)
may <- subset(airquality, Month!=5)
notmay <- subset(airquality, Month!=5)
points(notmay$Wind, may$Ozone, col="red", pch=18)
points(notmay$Wind, notmay$Ozone, col="red", pch=18)
points(notmay$Wind, notmay$Ozone, col="red", pch=8)
legend("topright", c(17,8), c("blue", "red"), c("May", "Other Months") )
legend("topright", c(17,8), c("blue", "red"), c("May", "Other Months") )
legend("topright", c(17,8), color = c("blue", "red"), c("May", "Other Months") )
legend("topright",pch = c(17,8),col = c("blue", "red"), legend = c("May", "Other Months") )
abline(v=median(airquality$Wind), lty=2, lwd=2)
par(mfrow=c(1,2))
plot(airquality$Wind, airquality$Ozone, title="Ozone and Wind")
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main="Ozone and Solar Radiation")
par(mfrow=c(1,3), mar=c(4,4,2,1), oma=c(0,0,2,0))
plot(airquality$Wind, airquality$Ozone, title="Ozone and Wind")
plot(airquality$Wind, airquality$Ozone, main = ="Ozone and Wind")
plot(airquality$Wind, airquality$Ozone, main ="Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main="Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main="Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer=TRUE)
swirl()
library()
rep(0:5, each=5)
x <- rnorm(100)
y <- rnorm(100)
library(ggplot2)
qplot(x,y)
str(mpg)
qplot(displ, hwy, data=mpg)
qplot(displ, hwy, data=mpg, col=drv)
str(mpg)
qplot(displ, hwy, data=mpg,geom= c("point", "smooth") col=drv)
qplot(displ, hwy, data=mpg,geom= c("point", "smooth"), col=drv)
qplot(displ, hwy, data=mpg,geom= c("point", "smooth"))
qplot(displ, hwy, data=mpg,facet=drv)
qplot(displ, hwy, data=mpg,facets=drv)
qplot(displ, hwy, data=mpg,facets=drv~)
qplot(displ, hwy, data=mpg,facets=drv~.)
qplot(displ, hwy, data=mpg,facets=.~drv)
qplot(hwy, data=mpg,facets=.~drv)
qplot(hwy, data=mpg,facets=.~drv, binwidth=2)
str(maccs)
str(maacs)
"pm" * [25]
"pm" * p+[25]
"pm"[25]
'pm'[25]
?quantile
quantile(rnorm(100), seq(0,1))
quantile(rnorm(100), seq(0,1, length=4))
pm[2.5]
"pm[2.5]"
expression("pm[25]")
?expression
expression("pm"*[25])
expression("log"*PM[25])
library(swirl)
swirl()
head(airquality)
xyplot(Ozone~Wind, data=airquality)
xyplot(Ozone~Wind, data=airquality, col="red", pch=8, main="Big Apple Data")
xyplot(Ozone~Wind, data=airquality, col="red", pch="8", main="Big Apple Data")
xyplot(Ozone~Wind, data=airquality,pch = 8, col="red", main="Big Apple Data")
xyplot(Ozone~Wind | as.factor(Month), data=airquality, layout=c(5,1))
play()
xyplot(Ozone~Wind | as.factor(Month), data=airquality)
nxt()
xyplot(Ozone~Wind | Month, data=airquality, layout=c(5,1))
p <- xyplot(Ozone~Wind, data=airquality)
print(p)
names(p)
play()
str(p)
head(p)
nxt()
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~x|f, layout=c(2,1))
play()
xyplot(y~x|f)
xyplot(y~x|f, layout=c(1,2))
nxt()
v1
v2
myedit("plot1.R")
pathtofile("plot1.R",, local = TRUE )
pathtofile("plot1.R", local = TRUE )
pathtofile("plot1.R",TRUE )
source(pathtofile("plot1.R"), local = TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"), local = TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"), lacal=TRUE)
source(pathtofile("myLabels.R"), local=TRUE)
xyplot(price~carat | color*cut, data=diamonds, strip=FALSE, pch=20, xlab=myxlab, ylab=myylab, main=mymain)
xyplot(price~carat | color*cut, data=diamonds, pch=20, xlab=myxlab, ylab=myylab, main=mymain)
sample(colors(), 10)
pal <- colorRamp(c("red", "blue"))
pal(0)
pal(1)
pal(seq(0,1,len=6))
p1 <- colorRampPalette(c("red", "blue"))
p1
p1(2)
p1(6)
0xcc
p2 <- colorRampPalette(c("red", "yellow"))
p2(2)
p2(10)
showme(p1(20))
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?fun
?rgb
p3 <- colorRampPalette(c("blue", "green"), alpha=0.5)
p3(5)
plot(x,y,pch=19, col=rgb(0,0.5,0.5))
plot(x,y,pch=19, col=rgb(0,0.5,0.5, 0.3))
cols <- brewer.pal(3, "BuGn")
showMe(cols)
pal <- colorRampPalette(cols)
showMe(pal(3))
showMe(pal(20))
image(volcano, col=pal(20))
image(volcano, col=p1(20))
image(volcano, col=p1(20))
swirl()
swirl()
library('swirl')
swirl()
str(mpg)
qplot(x=displ, y=hwy, data=mpg)
qplot(x=displ, y=hwy, data=mpg, color=drv)
qplot(x=displ, y=hwy, data=mpg, color=drv, geom = c("point", "smooth"))
qplot(y=hwy, data=mpg, col=drv)
qplot(y=hwy, data=mpg, color=drv)
myhigh
qplot(drv, hwy, data=mpg, geom="boxplot")
qplot(drv, hwy, data=mpg, geom="boxplot", color="manufacturer")
qplot(drv, hwy, data=mpg, geom="boxplot", color=manufacturer)
qplot(hwy, data=mpg, fill=drv)
qplot(displ, hwy, data=mpg, facets=.~drv)
qplot(displ, data=mpg, facets=drv~., binwidth=2)
qplot(hwy, data=mpg, facets=drv~., binwidth=2)
qplot(displ, hwy, data=mpg, geom=c("point", "smooth"), facets=.~drv)
g <- ggplot(data=mpg, aes(displ, hwy))
summary(g)
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(method="lm")
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point(color="pink", size="4", alpha=1/2)
g+geom_point(color="pink", size="4", alpha="1/2")
g+geom_point(color="pink", size=4, alpha="1/2)
g+geom_point(color="pink", size=4, alpha=1/2)
g+geom_point(aes(color=drv), size=4, alpha=1/2)
g+geom_point(aes(color=drv), size=4, alpha=1/2)+labs(title="Swirl Rules!", x="Displacement", y="Hwy Mileage")
g+geom_point(aes(color=drv))+labs(title="Swirl Rules!") + labs(x="Displacement", y="Hwy Mileage")
g+geom_point(aes(color=drv), size=2, alpha=1/2)+geom_smooth(size=4, linetype=3, method="lm", se=FALSE)
g+geom_point(aes(color=drv)) + theme_bw(base_family="Times")
plot(myx, myy, type="l", ylim=c(-3,3))
g <- ggplot(data=testdat, aes(x=myx, y=myy))
g+geom_line()
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(ylim(-3,3))
g+geom_line()+coord_cartesian(ylim= c(-3,3))
g <- ggplot(data=mpg, aes(x=displ, y=hwy, color=factor(year)))
g + geom_point()
g + geom_point() + facet_grid(drv~cyl, marging=TRUE)
g + geom_point() + facet_grid(drv~cyl, margins = =TRUE)
g + geom_point() + facet_grid(drv~cyl, margins = TRUE)
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) + geom_smooth(method="lm", se=FALSE, size=2, color="black")
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) + geom_smooth(method="lm", se=FALSE, size=2, color="black")+ labs(x="Displacement", y="Highway Mileage", title="Swirl Rules!")
swirl(0)
str(diamonds)
qplot(price, data=diamonds)
range(diamonds$price)
qplot(price, data=diamonds, binwidth=18497/30)
brk
counts
qplot(price, data=diamonds, binwidth=18497/30, fill=cut)
qplot(price, data=diamonds, geom="density")
qplot(price, data=diamonds,, geom = "density", color=cut)
qplot(carat, price, data=diamonds)
qplot(carat, price, data=diamonds, shape=cut)
qplot(carat, price, data=diamonds, color=cut)
qplot(carat, price, data=diamonds, color=cut, geom_smooth = "lm")
qplot(carat, price, data=diamonds, color=cut)+geom_smooth(method="lm")
qplot(carat, price, data=diamonds, color=cut, facets=.~cut)+geom_smooth(method="lm")
g <- ggplot(data=diamonds, aes(depth, price))
summary(g)
g + geom_point(alpha=1/3)
cutpoints <- quantile(diamonds$carat, seq(0,1, length=4), na.rm=TRUE )
cutpoints
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g <- ggplot(diamonds, aes(depth, price))
g <- geom_point(alpha=1/3)+ facet_grid(cut~car2)
g + geom_point(alpha=1/3)+ facet_grid(cut~car2)
diamonds[myd,]
g + geom_point(alpha=1/3)+ facet_grid(cut~car2)+geom_smooth(method="lm", size=3, color="pink")
ggplot(diamonds, aes(carat, price))+geom_boxplot()+facet_grid(.~cut)
swirl()
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(swirl)
swirl()
swirl::install_course("Exploratory Data Analysis")
library('swirl')
swirl()
install_from_swirl("Exploratory Data Analysis")
swirl()
swirl()
cmat
points(cx,cy, col=c("red", "orange","purple"), pch=3, cex=2, lwd=2)
mdist(x,y,cx,cy)
apply(distTmp,2, which.min)
points(x,y,pch=19,ceex=2,col=cols1[newClust])
points(x,y,pch=19,cex=2,col=cols1[newClust])
points(x,y,pch=19,cex=2,col=cols1[newClust])
tapply(x,newClust,mean)
tapply(x,newClust,mean)
tapply(y,newClust,mean)
points(x,y,pch=8,lwd=2,cex=2,col=cols1)
points(newCx,newCy,col=cols1,pch=8,cex=2,lwd=2)
mdist(x,y,newCx,newCy)
apply(distTmp,2,which.min)
apply(distTmp2,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust])
points(x,y,pch=19,cex=2,col=cols1[newClust2])
tapply(x,newClust2, mean)
tapply(y,newClust2, mean)
points(finalCx, finalCy, col=cols1, pch=9, cex=2, lwd=2)
kmeans(dataFrame, centers=3)
kmObj$iter
polt(x,y,col=kmObj$cluster, pch=19, cex=2)
plot(x,y,col=kmObj$cluster, pch=19, cex=2)
points(knObj$centers, col=c("black", "red", "green"), pch=3, cex=3, lwd=3)
points(kmObj$centers, col=c("black", "red", "green"), pch=3, cex=3, lwd=3)
plot(x,y,col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
getwd()
setwd("./coursera")
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip")
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", destfile="./")
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", destfile=".")
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", destfile="./dataset")
unzip("./dataset")
setwd("../Desktop/RR/RepData_PeerAssessment1")
unzip("./activity.zip")
data <- read.csv("./activity.csv")
head(data)
aggregate(data, by=date)
aggregate(data, by=list(data$date), FUN = sum)
aggregate(data, by=list(data$date), FUN = sum(interval))
aggregate(data, by=list(data$date), FUN = sum(data$interval))
aggregate(x = data$steps, by=list(data$interval), FUN = mean)
aggregate(x = list(data$steps), by=list(data$interval), FUN = mean)
temp <- aggregate(x = list(data$steps), by=list(data$date), FUN = mean)
head(temp)
temp <- aggregate(x = list(data$steps), by=list(data$date), FUN = sum)
head(temp)
dimm(temp)
dim(temp)
temp <- aggregate(x = list(totalsteps = data$steps), by=list(date = data$date), FUN = sum)
head(temp)
hist(temp$totalsteps)
library('ggplot')
library('ggplot2')
unzip("./activity.zip")
data <- read.csv("./activity.csv")
temp <- aggregate(x = list(totalsteps = data$steps), by=list(date = data$date), FUN = sum)
ggplot(temp, aes(totalsteps))+
geom_histogram()
ggplot(temp, aes(totalsteps))+geom_histogram(binwidth=100)
ggplot(temp, aes(totalsteps))+geom_histogram(binwidth=5)
ggplot(temp, aes(totalsteps))+geom_histogram()
ggplot(temp, aes(totalsteps))+geom_histogram(binwidth=1000)
ggplot(temp, aes(totalsteps))+geom_histogram()
library('ggplot2')
unzip("./activity.zip")
data <- read.csv("./activity.csv")
temp <- aggregate(x = list(totalsteps = data$steps), by=list(date = data$date), FUN = sum)
ggplot(temp, aes(totalsteps))+geom_histogram()+labs(title = "Total Daily Steps", x = "Steps", y = "Frequency")
